{"version":3,"sources":["sketch.js"],"names":["x","y","r","circlesWeirds","vibracionAnillo","setup","createCanvas","windowWidth","windowHeight","i","push","circleWeird","draw","background","stroke","strokeWeight","noFill","j","length","render","update","edges","translate","width","height","beginShape","k","angle","map","TWO_PI","cos","random","sin","vertex","endShape","CLOSE","pop","ellipse","position","this","copy","createVector","vel","p5","Vector","random2D","total","round","offset","add"],"mappings":"AAEA,IAAIA,EAAE,GACFC,EAAE,GACFC,EAAE,GACFC,cAAc,GACdC,gBAAgB,EAEpB,SAASC,QACLC,aAAaC,YAAYC,cACzB,IAAI,IAAIC,EAAE,EAAEA,EAAE,GAAGA,IACbN,cAAcO,KAAK,IAAIC,aAI/B,SAASC,OACLC,WAAW,GAAI,GAAI,IACnBC,OAAO,KACPC,aAAa,GACbC,SACA,IAAI,IAAIC,EAAE,EAAEA,EAAEd,cAAce,OAAOD,IAC/Bd,cAAcc,GAAGE,SACjBhB,cAAcc,GAAGG,SACjBjB,cAAcc,GAAGI,QAKrBX,OACAY,UAAUC,MAAM,EAAEC,OAAO,GACzBC,aACA,IAAI,IAAIC,EAAE,EAAEA,EAAE,GAAGA,IAAI,CACjB,IAAIC,EAAMC,IAAIF,EAAE,EAAE,GAAG,EAAEG,QACnB7B,EAAEuB,MAAM,EAAEO,IAAIH,GAAOI,OAAO,EAAE,GAC9B9B,EAAEsB,MAAM,EAAES,IAAIL,GAAQI,OAAO,EAAE,GACnCE,OAAOjC,EAAEC,GAEbiC,SAASC,OACTC,MAEAC,QAAQd,MAAM,IAAIC,OAAO,EAAED,MAAM,GACjCc,QAAQd,MAAM,IAAIC,OAAO,IAAID,MAAM,GAEnCc,QAAQd,MAAM,IAAIC,OAAO,IAAID,MAAM,IAAIA,MAAM,IAE7CD,UAAUC,MAAM,IAAIC,OAAO,KAC3Bd,OACAe,aACA,IAAI,IAAIC,EAAE,EAAEA,EAAE,GAAGA,IAAI,CACjB,IAAIC,EAAMC,IAAIF,EAAE,EAAE,GAAG,EAAEG,QACnB7B,EAAEuB,MAAM,EAAEO,IAAIH,GAAOI,OAAO,EAAE,GAC9B9B,EAAEsB,MAAM,GAAGS,IAAIL,GAAQI,OAAO,EAAE,GACpCE,OAAOjC,EAAEC,GAEbiC,SAASC,OACTC,MAEA1B,OACIe,aACA,IAAI,IAAIhB,EAAE,EAAEA,EAAE,GAAGA,IAAI,CACjB,IAAIkB,EAAMC,IAAInB,EAAE,EAAE,GAAG,EAAEoB,QACnB3B,EAAGqB,MAAM,GAAK,EAAEd,EAChBT,EAAGE,EAAE4B,IAAIH,GACT1B,EAAEC,EAAE8B,IAAIL,GACZM,OAAOjC,EAAEC,GAEbiC,SAASC,OACbC,MAIJ,SAASzB,YAAY2B,EAASpC,GAgB1B,IAdIqC,KAAKD,SADLA,EACgBA,EAASE,OAETC,aAAaV,OAAOR,OAAQQ,OAAOP,SAGnDe,KAAKrC,EADHA,EACW,GAAJA,EAEA6B,OAAO,GAAI,IAExBQ,KAAKD,SAASG,aAAaV,OAAOR,OAAOQ,OAAOP,SAChDe,KAAKrC,EAAE6B,OAAO,GAAG,IACjBQ,KAAKG,IAAIC,GAAGC,OAAOC,WACnBN,KAAKO,MAAMC,MAAMhB,OAAO,EAAE,KAC1BQ,KAAKS,OAAO,GACRvC,EAAE,EAAEA,EAAE8B,KAAKO,MAAMrC,IACjB8B,KAAKS,OAAOvC,GAAGsB,OAAe,IAAPQ,KAAKrC,EAAa,GAAPqC,KAAKrC,GAE3CqC,KAAKnB,OAAO,WACRmB,KAAKD,SAASW,IAAIV,KAAKG,MAE3BH,KAAKpB,OAAO,WACRT,OACAI,OAAO,KACPE,SACAM,UAAUiB,KAAKD,SAAStC,EAAEuC,KAAKD,SAASrC,GACxCwB,aACA,IAAI,IAAIhB,EAAE,EAAEA,EAAE8B,KAAKO,MAAMrC,IAAI,CACzB,IAAIkB,EAAMC,IAAInB,EAAE,EAAE8B,KAAKO,MAAM,EAAEjB,QAC3B3B,EAAEqC,KAAKrC,EAAEqC,KAAKS,OAAOvC,GACrBT,EAAGE,EAAE4B,IAAIH,GACT1B,EAAEC,EAAE8B,IAAIL,GACZM,OAAOjC,EAAEC,GAEbiC,SAASC,OACTC,OAEJG,KAAKlB,MAAM,WACJkB,KAAKD,SAAStC,EAAEuB,MAAMgB,KAAKrC,EAC1BqC,KAAKD,SAAStC,GAAGuC,KAAKrC,EACjBqC,KAAKD,SAAStC,GAAGuC,KAAKrC,IAC3BqC,KAAKD,SAAStC,EAAEuB,MAAMgB,KAAKrC,GAE5BqC,KAAKD,SAASrC,EAAEuB,OAAOe,KAAKrC,EAC3BqC,KAAKD,SAASrC,GAAGsC,KAAKrC,EACjBqC,KAAKD,SAASrC,GAAGsC,KAAKrC,IACzBqC,KAAKD,SAASrC,EAAEuB,OAAOe,KAAKrC","file":"sketch.js","sourcesContent":["//variables declarations \r\n\r\nlet x=[];\r\nlet y=[];\r\nlet r=40;\r\nlet circlesWeirds=[];\r\nlet vibracionAnillo=1;\r\n//setup\r\nfunction setup(){\r\n    createCanvas(windowWidth,windowHeight);\r\n    for(let i=0;i<10;i++){\r\n        circlesWeirds.push(new circleWeird());\r\n    }\r\n}\r\n//main loop \r\nfunction draw(){\r\n    background(31, 29, 46);\r\n    stroke(255);\r\n    strokeWeight(1);\r\n    noFill();\r\n    for(let j=0;j<circlesWeirds.length;j++){\r\n        circlesWeirds[j].render();\r\n        circlesWeirds[j].update();\r\n        circlesWeirds[j].edges();\r\n\r\n    }\r\n    \r\n    //ellipse(width/4,height/4,width/4);//sol\r\n    push();\r\n    translate(width/4,height/4);\r\n    beginShape();\r\n    for(let k=0;k<50;k++){\r\n        let angle=map(k,0,50,0,TWO_PI);\r\n        let x=width/7*cos(angle)+random(0,3);\r\n        let y=width/7*sin(angle)+ random(0,3);\r\n        vertex(x,y);\r\n    }\r\n    endShape(CLOSE);\r\n    pop();\r\n    \r\n    ellipse(width/1.1,height/7,width/9);//planet-b\r\n    ellipse(width/1.2,height/1.5,width/5);//planet-A\r\n    //anillos\r\n    ellipse(width/1.2,height/1.5,width/2.5,width/12);\r\n    // ellipse(width/1.2,height/1.5,width/2,width/10);\r\n    translate(width/1.2,height/1.5);\r\n    push();\r\n    beginShape();\r\n    for(let k=0;k<50;k++){\r\n        let angle=map(k,0,50,0,TWO_PI);\r\n        let x=width/4*cos(angle)+random(0,2);\r\n        let y=width/12*sin(angle)+ random(0,2);\r\n        vertex(x,y);\r\n    }\r\n    endShape(CLOSE);\r\n    pop();\r\n    //planeta-b corteza \r\n    push();\r\n        beginShape();\r\n        for(let i=0;i<12;i++){\r\n            let angle=map(i,0,12,0,TWO_PI);\r\n            let r=(width/16)+ 2^i;\r\n            let x =r*cos(angle);\r\n            let y=r*sin(angle);\r\n            vertex(x,y);\r\n        }\r\n        endShape(CLOSE);\r\n    pop();\r\n\r\n    \r\n}\r\nfunction circleWeird(position,r){\r\n    if (position) {\r\n        this.position = position.copy();\r\n      } else {\r\n        this.position = createVector(random(width), random(height))\r\n      }\r\n      if (r) {\r\n        this.r = r * 0.5;\r\n      } else {\r\n        this.r = random(15, 50);\r\n      }\r\n    this.position=createVector(random(width),random(height));//se asigan un vector a la posiscion del asteroide\r\n    this.r=random(30,60);//se crea un radio aleatorio para el circulo o en este caso asteroide\r\n    this.vel=p5.Vector.random2D();// direccion de la velocidad del asteroide se asgigna un vector aleatorio de -1 a 1\r\n    this.total=round(random(5,12));//el total de vertices del asteroide\r\n    this.offset=[];//arreglo de desfasamientos del radio del asteroide respecto a los vertices\r\n    for(i=0;i<this.total;i++){\r\n        this.offset[i]=random(-this.r*0.5,this.r*0.5);\r\n    }   \r\n    this.update=function(){\r\n        this.position.add(this.vel);\r\n    }\r\n    this.render=function(){\r\n        push();\r\n        stroke(255);\r\n        noFill();\r\n        translate(this.position.x,this.position.y);\r\n        beginShape();\r\n        for(let i=0;i<this.total;i++){\r\n            let angle=map(i,0,this.total,0,TWO_PI);//convierte cada punto o vertice en un valor representativo en escala radianes (ej.0-5 en angulos 2pi/5 para 0 hasta 2pi para 5)\r\n            let r=this.r+this.offset[i];\r\n            let x =r*cos(angle);\r\n            let y=r*sin(angle);\r\n            vertex(x,y);\r\n        }\r\n        endShape(CLOSE);\r\n        pop();\r\n    }\r\n    this.edges=function(){\r\n        if(this.position.x>width+this.r){//cuando atraviesa el borde derecho\r\n            this.position.x=-this.r;\r\n        }else if(this.position.x<-this.r){//cuando atraviesa el borde izquierdo\r\n            this.position.x=width+this.r;\r\n        }\r\n        if(this.position.y>height+this.r){//cuando atraviesa el borde superior\r\n            this.position.y=-this.r;\r\n        }else if(this.position.y<-this.r){//cuando atraviesa el borde inferior\r\n              this.position.y=height+this.r;\r\n          }\r\n    }\r\n    \r\n}"]}