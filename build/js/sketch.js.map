{"version":3,"sources":["sketch.js"],"names":["x","y","r","circlesWeirds","vibracionAnillo","setup","createCanvas","windowWidth","windowHeight","i","push","circleWeird","draw","background","stroke","strokeWeight","noFill","j","length","render","update","edges","ellipse","width","height","translate","beginShape","angle","map","TWO_PI","cos","sin","vertex","endShape","CLOSE","pop","position","this","copy","createVector","random","vel","p5","Vector","random2D","console","log","total","round","offset","add"],"mappings":"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","file":"sketch.js","sourcesContent":["//variables declarations \r\n\r\nlet x=[];\r\nlet y=[];\r\nlet r=40;\r\nlet circlesWeirds=[];\r\nlet vibracionAnillo=1;\r\n//setup\r\nfunction setup(){\r\n    createCanvas(windowWidth,windowHeight);\r\n    for(let i=0;i<10;i++){\r\n        circlesWeirds.push(new circleWeird());\r\n    }\r\n}\r\n//main loop \r\nfunction draw(){\r\n    background(31, 29, 46);\r\n    stroke(255);\r\n    strokeWeight(1);\r\n    noFill();\r\n    for(let j=0;j<circlesWeirds.length;j++){\r\n        circlesWeirds[j].render();\r\n        circlesWeirds[j].update();\r\n        circlesWeirds[j].edges();\r\n\r\n    }\r\n    push();\r\n    strokeWeight(1);\r\n    ellipse(width/4,height/4,width/4);//sol\r\n    \r\n    ellipse(width/1.1,height/7,width/9);//planet-b\r\n    ellipse(width/1.2,height/1.5,width/5);//planet-A\r\n\r\n    ellipse(width/1.2,height/1.5,width/2.5,width/12);\r\n    ellipse(width/1.2,height/1.5,width/2,width/10);\r\n\r\n    \r\n    for(let j=0;j<3;j++){\r\n        translate((width/1.2) + j*20,height/1.5);\r\n        beginShape();\r\n        for(let i=0;i<12;i++){\r\n            let angle=map(i,0,10,0,TWO_PI);\r\n            let r=80+i*i/i+(i+4);\r\n            let x =r*cos(angle);\r\n            let y=r*sin(angle);\r\n            vertex(x,y);\r\n        }\r\n        endShape(CLOSE);\r\n    \r\n    }\r\n    \r\n    pop();\r\n\r\n    \r\n}\r\nfunction circleWeird(position,r){\r\n    if (position) {\r\n        this.position = position.copy();\r\n      } else {\r\n        this.position = createVector(random(width), random(height))\r\n      }\r\n      if (r) {\r\n        this.r = r * 0.5;\r\n      } else {\r\n        this.r = random(15, 50);\r\n      }\r\n    this.position=createVector(random(width),random(height));//se asigan un vector a la posiscion del asteroide\r\n    this.r=random(30,60);//se crea un radio aleatorio para el circulo o en este caso asteroide\r\n    this.vel=p5.Vector.random2D();//en la velocidad del asteroide se asgigna un vector aleatorio :/\r\n    console.log(this.vel);\r\n    this.total=round(random(5,12));//el total de vertices del asteroide\r\n    this.offset=[];//el desfasamiento del radio del asteroide respecto a los vertices??\r\n    for(i=0;i<this.total;i++){\r\n        this.offset[i]=random(-this.r*0.5,this.r*0.5);\r\n    }   \r\n    this.update=function(){\r\n        this.position.add(this.vel);\r\n    }\r\n    this.render=function(){\r\n        push();\r\n        stroke(255);\r\n        noFill();\r\n        translate(this.position.x,this.position.y);\r\n        beginShape();\r\n        for(let i=0;i<this.total;i++){\r\n            let angle=map(i,0,this.total,0,TWO_PI);//convierte cada punto o vertice en un valor representativo en escala radianes (ej.0-5 en angulos 2pi/5 para 0 hasta 2pi para 5)\r\n            let r=this.r+this.offset[i];\r\n            let x =r*cos(angle);\r\n            let y=r*sin(angle);\r\n            vertex(x,y);\r\n        }\r\n        endShape(CLOSE);\r\n        pop();\r\n    }\r\n    this.edges=function(){\r\n        if(this.position.x>width+this.r){//cuando atraviesa el borde derecho\r\n            this.position.x=-this.r;\r\n        }else if(this.position.x<-this.r){//cuando atraviesa el borde izquierdo\r\n            this.position.x=width+this.r;\r\n        }\r\n        if(this.position.y>height+this.r){//cuando atraviesa el borde superior\r\n            this.position.y=-this.r;\r\n        }else if(this.position.y<-this.r){//cuando atraviesa el borde inferior\r\n              this.position.y=height+this.r;\r\n          }\r\n    }\r\n    \r\n}"]}