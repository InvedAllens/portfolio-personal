{"version":3,"sources":["validaciones.js"],"names":["mensajesError","nombre","valueMissing","email","typeMismatch","patternMismatch","asunto","mensaje","validarInput","e","tipoInput","target","dataset","tipo","validity","valid","parentElement","classList","remove","add","querySelector","innerHTML","mostrarMensajeError","input","mensajes","clave","valor","Object","entries"],"mappings":"AAAA,MAAMA,cAAc,CAChBC,OAAO,CACHC,aAAa,mCAEjBC,MAAM,CACFD,aAAa,kCACbE,aAAa,yBACbC,gBAAgB,yEAEpBC,OAAO,CACHJ,aAAa,kCACbG,gBAAgB,kJAEpBE,QAAQ,CACJL,aAAa,2CAQd,SAASM,aAAaC,GAEzB,MAAMC,EAAUD,EAAEE,OAAOC,QAAQC,KAI9BJ,EAAEE,OAAOG,SAASC,MACjBN,EAAEE,OAAOK,cAAcC,UAAUC,OAAO,6BAGxCT,EAAEE,OAAOK,cAAcC,UAAUE,IAAI,4BACrCV,EAAEE,OAAOK,cAAcI,cAAc,wBAAwBC,UAAU,sXAGhEC,oBAAoBZ,EAAUD,EAAEE,SAI/C,SAASW,oBAAoBZ,EAAUa,GAInC,IAAIC,EAAS,GAEb,IAAI,MAAOC,EAAMC,KAAUC,OAAOC,QAAQ5B,cAAcU,IAC7Ca,EAAMT,SAASW,KACdD,EAASE,GAKrB,OAAOF","file":"validaciones.js","sourcesContent":["const mensajesError={\r\n    nombre:{\r\n        valueMissing:\"Este campo no puede estar vacio\",\r\n    },\r\n    email:{\r\n        valueMissing:\"Este campo no puede estar vacio\",\r\n        typeMismatch:\"El correo no es valido\",\r\n        patternMismatch:\"El correo debe coincidir con el siguiente formato usuario@dominio.com\"\r\n    },  \r\n    asunto:{\r\n        valueMissing:\"Este campo no puede estar vacio\",\r\n        patternMismatch:\"Al menos 6 caracteres, máximo 12, debe contener una letra minúscula, una letra mayúscula, un número y no puede contener caracteres especiales.\"\r\n    },\r\n    mensaje:{\r\n        valueMissing:\"Este campo no puede estar vacio\"\r\n    }\r\n\r\n    \r\n};\r\n// const verificarTipoInput={\r\n//     nacimiento:(e)=>{validarEdad(e);}\r\n// }\r\nexport function validarInput(e){\r\n\r\n    const tipoInput=e.target.dataset.tipo;\r\n    // if(verificarTipoInput[tipoInput]){\r\n    //     verificarTipoInput[tipoInput](e);\r\n    // }\r\n    if(e.target.validity.valid){\r\n        e.target.parentElement.classList.remove(\"input-container--invalid\");\r\n        //console.log(e.target.validity);\r\n    }else{\r\n        e.target.parentElement.classList.add(\"input-container--invalid\");\r\n        e.target.parentElement.querySelector(\".input-message-error\").innerHTML=`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#e73d3d\" class=\"bi bi-exclamation-circle\" viewBox=\"0 0 16 16\">\r\n        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n        <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"/>\r\n      </svg> `+mostrarMensajeError(tipoInput,e.target);\r\n    }\r\n}\r\n\r\nfunction mostrarMensajeError(tipoInput,input){\r\n    //console.log(mensajesError);\r\n    //console.log(input.validity);\r\n    //console.log(input.value);\r\n    let mensajes='';\r\n    //console.log(mensajesError[tipoInput])\r\n    for(const [clave,valor] of Object.entries(mensajesError[tipoInput])){\r\n            if(input.validity[clave]){\r\n                mensajes=valor;\r\n            }\r\n        \r\n    }\r\n    //console.log(mensajes);\r\n    return mensajes;\r\n}\r\n\r\n"]}